user vcap vcap;

worker_processes <%= p('http.worker_processes') %>;

error_log /var/vcap/sys/log/http/nginx-error.log;
pid /var/vcap/sys/run/http/nginx.pid;

daemon on;

events {
    worker_connections <%= p('http.worker_connections') %>;
}

http {
    server_tokens off;
    client_max_body_size 4k;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 64;
    reset_timedout_connection on;

    default_type application/octet-stream;
    include /var/vcap/packages/nginx/conf/mime.types;

    log_format main '$remote_addr $remote_user [$time_iso8601] "$host" "$request" $request_length $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time "$upstream_addr" "$upstream_status" "$upstream_response_time"';
    access_log /var/vcap/sys/log/http/nginx-access.log main buffer=16k flush=1s;

    resolver 8.8.8.8 8.8.4.4;

    gzip on;
    gzip_comp_level 4;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types application/json text/css text/javascript text/plain text/xml image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype;
    gzip_vary on;

    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_connect_timeout 16s;
    proxy_read_timeout 8s;
    proxy_send_timeout 4s;

    proxy_cache_path /var/vcap/data/http/cache-asset levels=2:2 keys_zone=assetcache:64m max_size=4g inactive=28d;

    server {
        listen 80 default_server;
        server_name <%= p('http.domains').join(' ') %>;

        <% if p('http.letsencrypt.enabled') %>
            location /.well-known/acme-challenge {
                default_type text/plain;

                root /var/vcap/data/http/letsencrypt;
            }
        <% end %>

        <% if p('http.tls.certificate') %>

        location / {
            return 301 https://<%= p('http.domains')[0] %>$request_uri;
        }
    }

    server {
        listen 443 default_server ssl http2;
        server_name <%= p('http.domains').join(' ') %>;

        # https://mozilla.github.io/server-side-tls/ssl-config-generator/
        ssl_certificate /var/vcap/jobs/http/etc/tls.crt;
        ssl_certificate_key /var/vcap/jobs/http/etc/tls.key;
        <% if p('http.tls.dh') %>
            ssl_dhparam /var/vcap/jobs/http/etc/tls-dh.key;
        <% end %>
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:64m;
        ssl_session_tickets off;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers on;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /var/vcap/jobs/http/etc/tls.crt;

        <% if p('http.hsts') %>
            add_header Strict-Transport-Security max-age=31536000;
        <% end %>

        <% end %>

        if ($host != <%= p('http.domains')[0] %>) {
            rewrite (.*) $scheme://<%= p('http.domains')[0] %>$1 redirect;
        }

        root /var/vcap/data/http/docroot-<%= p('http.docroot_version') %>;

        error_page 400 /error/http-400.html;
        error_page 403 /error/http-403.html;
        error_page 404 /error/http-404.html;
        error_page 405 /error/http-405.html;

        location ~ "^/asset/(.+)$" {
            limit_except GET {
                deny all;
            }

            proxy_cache_key "$http_origin;$uri";
            proxy_set_header host '<%= p('http.s3_bucket') %>.s3.amazonaws.com';
            proxy_ignore_headers set-cookie;
            proxy_hide_header set-cookie;
            proxy_set_header cookie "";
            proxy_hide_header x-amz-id-2;
            proxy_hide_header x-amz-delete-marker;
            proxy_hide_header x-amz-request-id;
            proxy_hide_header x-amz-version-id;
            proxy_hide_header etag;

            proxy_cache assetcache;
            proxy_cache_valid 200 7d;
            proxy_cache_valid 403 6h;
            proxy_cache_valid 404 6h;

            proxy_intercept_errors on;
            error_page 403 =404 /error/http-404.html;

            proxy_pass https://<%= p('http.s3_bucket') %>.s3.amazonaws.com$uri;

            add_header Access-Control-Allow-Origin "$scheme://$host";
            add_header x-cache '$upstream_cache_status $upstream_http_date';
            expires max;
        }

        location /version {
            limit_except GET {
                deny all;
            }

            default_type text/plain;
        }

        location / {
            limit_except GET {
                deny all;
            }
        }
    }
}
